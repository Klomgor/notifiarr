{
    "swagger": "2.0",
    "info": {
        "description": "Monitors local services and sends notifications.",
        "title": "Notifiarr Client GUI API Documentation",
        "termsOfService": "https://notifiarr.com",
        "contact": {
            "name": "Notifiarr Discord",
            "url": "https://notifiarr.com/discord"
        },
        "license": {
            "name": "MIT",
            "url": "https://github.com/Notifiarr/notifiarr/blob/main/LICENSE"
        }
    },
    "basePath": "/ui",
    "paths": {
        "/ajax/{path}/{hash}": {
            "get": {
                "description": "Returns execution statistics for a specific command.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Integrations"
                ],
                "summary": "Get command statistics",
                "parameters": [
                    {
                        "enum": [
                            "cmdstats",
                            "cmdargs"
                        ],
                        "type": "string",
                        "description": "Command path identifier",
                        "name": "path",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Command hash",
                        "name": "hash",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "command statistics",
                        "schema": {}
                    },
                    "400": {
                        "description": "invalid command hash",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/browse": {
            "get": {
                "description": "Creates a new folder at the specified path.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Files"
                ],
                "summary": "Create folder",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Folder path to create",
                        "name": "dir",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Must be true to create a folder",
                        "name": "new",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "directory contents where file was created",
                        "schema": {
                            "$ref": "#/definitions/client.BrowseDir"
                        }
                    },
                    "406": {
                        "description": "error reading directory",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error creating folder",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/checkAllInstances": {
            "get": {
                "description": "Checks all the starr, media and downloader apps and returns the results.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Integrations"
                ],
                "summary": "Check all instances",
                "responses": {
                    "200": {
                        "description": "all check results",
                        "schema": {
                            "$ref": "#/definitions/checkapp.CheckAllOutput"
                        }
                    }
                }
            }
        },
        "/checkInstance/{type}/{index}": {
            "post": {
                "description": "Validates and tests the configuration for a specific application instance.",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Integrations"
                ],
                "summary": "Check instance configuration",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Application type",
                        "name": "type",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Instance index",
                        "name": "index",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "configuration check result",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "parsing error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/deleteFile/{source}/{id}": {
            "get": {
                "description": "Deletes a log or config file.",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Files"
                ],
                "summary": "Delete files",
                "parameters": [
                    {
                        "type": "string",
                        "description": "log or config",
                        "name": "source",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "file id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "bad input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error removing file",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/downloadFile/{source}/{id}": {
            "get": {
                "description": "Downloads a log file (to a browser) as a zip file.",
                "produces": [
                    "application/zip"
                ],
                "tags": [
                    "Files"
                ],
                "summary": "Download files",
                "parameters": [
                    {
                        "type": "string",
                        "description": "log or config",
                        "name": "source",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "file id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "zip file content",
                        "schema": {}
                    },
                    "400": {
                        "description": "bad input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error opening file",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/getFile/{source}/{id}": {
            "get": {
                "description": "Returns portions of a log or config file based on request parameters like lines, skip, and sort.",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Files"
                ],
                "summary": "Get file contents",
                "parameters": [
                    {
                        "type": "string",
                        "description": "log or config",
                        "name": "source",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "file id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "sort order (asc/desc)",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "file contents",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "invalid source",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error reading file",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/getFile/{source}/{id}/{lines}": {
            "get": {
                "description": "Returns portions of a log or config file based on request parameters like lines, skip, and sort.",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Files"
                ],
                "summary": "Get file contents",
                "parameters": [
                    {
                        "type": "string",
                        "description": "log or config",
                        "name": "source",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "file id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "number of lines to return",
                        "name": "lines",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "sort order (asc/desc)",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "file contents",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "invalid source",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error reading file",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/getFile/{source}/{id}/{lines}/{skip}": {
            "get": {
                "description": "Returns portions of a log or config file based on request parameters like lines, skip, and sort.",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Files"
                ],
                "summary": "Get file contents",
                "parameters": [
                    {
                        "type": "string",
                        "description": "log or config",
                        "name": "source",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "file id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "number of lines to return",
                        "name": "lines",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "number of lines to skip",
                        "name": "skip",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "sort order (asc/desc)",
                        "name": "sort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "file contents",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "invalid source",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error reading file",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/integrations": {
            "get": {
                "description": "Returns current status and data for all configured integrations including apps, Plex, Tautulli, etc.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Integrations"
                ],
                "summary": "Get integrations status",
                "responses": {
                    "200": {
                        "description": "integrations status data",
                        "schema": {
                            "$ref": "#/definitions/client.Integrations"
                        }
                    }
                }
            }
        },
        "/ping": {
            "get": {
                "description": "Returns application status, indicating if it's reloading or running normally.",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "System"
                ],
                "summary": "Ping application",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "423": {
                        "description": "Reloading",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/profile": {
            "get": {
                "description": "Returns comprehensive profile information including config, triggers, system info, and user settings.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System"
                ],
                "summary": "Get user profile",
                "responses": {
                    "200": {
                        "description": "comprehensive profile data",
                        "schema": {
                            "$ref": "#/definitions/client.Profile"
                        }
                    },
                    "401": {
                        "description": "unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "description": "Updates user profile settings including authentication type, password, header, and upstream configuration.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "System"
                ],
                "summary": "Update user profile",
                "parameters": [
                    {
                        "description": "Profile update data",
                        "name": "profile",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/client.ProfilePost"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success message",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "invalid request or password",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error saving config",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/ps": {
            "get": {
                "description": "Returns a list of currently running system processes.",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "System"
                ],
                "summary": "Get process list",
                "responses": {
                    "200": {
                        "description": "process list data",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error getting process list",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/reconfig": {
            "post": {
                "description": "Updates the application configuration with new settings and optionally triggers a reload.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "System"
                ],
                "summary": "Update configuration",
                "parameters": [
                    {
                        "type": "string",
                        "description": "set to 'true' to skip reload",
                        "name": "noreload",
                        "in": "query"
                    },
                    {
                        "description": "Configuration data",
                        "name": "config",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/configfile.Config"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success message",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "invalid request or config",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error saving config",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/reload": {
            "get": {
                "description": "Triggers an immediate reload of the application configuration.",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "System"
                ],
                "summary": "Reload configuration",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/runCommand/{hash}": {
            "post": {
                "description": "Executes a specific command with provided arguments.",
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Integrations"
                ],
                "summary": "Run command",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Command hash",
                        "name": "hash",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "description": "Command arguments",
                        "name": "args",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success message",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "invalid command hash",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/services/check/{service}": {
            "get": {
                "description": "Runs a specific service check by name.",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Integrations"
                ],
                "summary": "Check service",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Service name to check",
                        "name": "service",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Service Check Initiated",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "error running service check",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/services/{action}": {
            "get": {
                "description": "Starts or stops all service checks.",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Integrations"
                ],
                "summary": "Start/stop service checks",
                "parameters": [
                    {
                        "enum": [
                            "stop",
                            "start"
                        ],
                        "type": "string",
                        "description": "Action to perform",
                        "name": "action",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Service Checks Stopped or Service Checks Started",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "invalid action",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/shutdown": {
            "get": {
                "description": "Initiates graceful shutdown of the application.",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "System"
                ],
                "summary": "Shutdown application",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/startFileWatch/{index}": {
            "get": {
                "description": "Starts monitoring a specific file for changes.",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Integrations"
                ],
                "summary": "Start file watcher",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "File watcher index",
                        "name": "index",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success message",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "invalid or unknown index",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "406": {
                        "description": "watcher already running",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error starting watcher",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/stopFileWatch/{index}": {
            "get": {
                "description": "Stops monitoring a specific file for changes.",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Integrations"
                ],
                "summary": "Stop file watcher",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "File watcher index",
                        "name": "index",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success message",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "invalid or unknown index",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "406": {
                        "description": "watcher already stopped",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error stopping watcher",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/trigger/{trigger}": {
            "get": {
                "description": "Executes a specific trigger action.",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "System"
                ],
                "summary": "Trigger action",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Trigger name to execute",
                        "name": "trigger",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "trigger result",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "unknown trigger",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/trigger/{trigger}/{content}": {
            "get": {
                "description": "Executes a specific trigger action.",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "System"
                ],
                "summary": "Trigger action",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Trigger name to execute",
                        "name": "trigger",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Optional content for the trigger",
                        "name": "content",
                        "in": "path"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "trigger result",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "unknown trigger",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/tunnel/ping": {
            "get": {
                "description": "Tests connectivity and response times to all configured tunnel servers.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "System"
                ],
                "summary": "Ping tunnel servers",
                "responses": {
                    "200": {
                        "description": "map of tunnel index to ping time",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "no client info (startup error)",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/tunnel/save": {
            "post": {
                "description": "Saves the user's preferred primary and backup tunnel server selections.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "System"
                ],
                "summary": "Save tunnel preferences",
                "parameters": [
                    {
                        "description": "Tunnel configuration",
                        "name": "tunnels",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "properties": {
                                "BackupTunnel": {
                                    "type": "array",
                                    "items": {
                                        "type": "string"
                                    }
                                },
                                "PrimaryTunnel": {
                                    "type": "string"
                                }
                            }
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success message",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error saving tunnels",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/uploadFile/{source}/{id}": {
            "get": {
                "description": "Uploads a log file to notifiarr.com.",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "Files"
                ],
                "summary": "Upload files",
                "parameters": [
                    {
                        "type": "string",
                        "description": "log",
                        "name": "source",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "file id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "bad input",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "error uploading file",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/ws": {
            "get": {
                "description": "Establishes a WebSocket connection to stream log file content in real-time.",
                "tags": [
                    "Files"
                ],
                "summary": "WebSocket log streaming",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Source type (logs)",
                        "name": "source",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "File ID to stream",
                        "name": "fileId",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "101": {
                        "description": "WebSocket connection established",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "400": {
                        "description": "invalid source or file not found",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "tail error or websocket upgrade failed",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "apps.DelugeConfig": {
            "type": "object",
            "properties": {
                "deletes": {
                    "type": "integer"
                },
                "http_pass": {
                    "type": "string"
                },
                "http_user": {
                    "type": "string"
                },
                "interval": {
                    "$ref": "#/definitions/cnfg.Duration"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "timeout": {
                    "$ref": "#/definitions/cnfg.Duration"
                },
                "url": {
                    "type": "string"
                },
                "validSsl": {
                    "type": "boolean"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "apps.ExtraConfig": {
            "type": "object",
            "properties": {
                "deletes": {
                    "type": "integer"
                },
                "interval": {
                    "$ref": "#/definitions/cnfg.Duration"
                },
                "name": {
                    "type": "string"
                },
                "timeout": {
                    "$ref": "#/definitions/cnfg.Duration"
                },
                "validSsl": {
                    "type": "boolean"
                }
            }
        },
        "apps.NZBGetConfig": {
            "type": "object",
            "properties": {
                "deletes": {
                    "type": "integer"
                },
                "interval": {
                    "$ref": "#/definitions/cnfg.Duration"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "timeout": {
                    "$ref": "#/definitions/cnfg.Duration"
                },
                "url": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "validSsl": {
                    "type": "boolean"
                }
            }
        },
        "apps.PlexConfig": {
            "type": "object",
            "properties": {
                "deletes": {
                    "type": "integer"
                },
                "interval": {
                    "$ref": "#/definitions/cnfg.Duration"
                },
                "name": {
                    "type": "string"
                },
                "timeout": {
                    "$ref": "#/definitions/cnfg.Duration"
                },
                "token": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "validSsl": {
                    "type": "boolean"
                }
            }
        },
        "apps.QbitConfig": {
            "type": "object",
            "properties": {
                "deletes": {
                    "type": "integer"
                },
                "http_pass": {
                    "type": "string"
                },
                "http_user": {
                    "type": "string"
                },
                "interval": {
                    "$ref": "#/definitions/cnfg.Duration"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "timeout": {
                    "$ref": "#/definitions/cnfg.Duration"
                },
                "url": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "validSsl": {
                    "type": "boolean"
                }
            }
        },
        "apps.RtorrentConfig": {
            "type": "object",
            "properties": {
                "deletes": {
                    "type": "integer"
                },
                "interval": {
                    "$ref": "#/definitions/cnfg.Duration"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "timeout": {
                    "$ref": "#/definitions/cnfg.Duration"
                },
                "url": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "validSsl": {
                    "type": "boolean"
                }
            }
        },
        "apps.SabNZBConfig": {
            "type": "object",
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "deletes": {
                    "type": "integer"
                },
                "interval": {
                    "$ref": "#/definitions/cnfg.Duration"
                },
                "name": {
                    "type": "string"
                },
                "timeout": {
                    "$ref": "#/definitions/cnfg.Duration"
                },
                "url": {
                    "type": "string"
                },
                "validSsl": {
                    "type": "boolean"
                }
            }
        },
        "apps.StarrConfig": {
            "type": "object",
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "deletes": {
                    "type": "integer"
                },
                "httpPass": {
                    "type": "string"
                },
                "httpUser": {
                    "type": "string"
                },
                "interval": {
                    "$ref": "#/definitions/cnfg.Duration"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "timeout": {
                    "$ref": "#/definitions/cnfg.Duration"
                },
                "url": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "validSsl": {
                    "type": "boolean"
                }
            }
        },
        "apps.TautulliConfig": {
            "type": "object",
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "deletes": {
                    "type": "integer"
                },
                "interval": {
                    "$ref": "#/definitions/cnfg.Duration"
                },
                "name": {
                    "type": "string"
                },
                "timeout": {
                    "$ref": "#/definitions/cnfg.Duration"
                },
                "url": {
                    "type": "string"
                },
                "validSsl": {
                    "type": "boolean"
                }
            }
        },
        "apps.XmissionConfig": {
            "type": "object",
            "properties": {
                "deletes": {
                    "type": "integer"
                },
                "interval": {
                    "$ref": "#/definitions/cnfg.Duration"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "timeout": {
                    "$ref": "#/definitions/cnfg.Duration"
                },
                "url": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                },
                "validSsl": {
                    "type": "boolean"
                }
            }
        },
        "checkapp.CheckAllOutput": {
            "type": "object",
            "properties": {
                "Deluge": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/checkapp.TestResult"
                    }
                },
                "Lidarr": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/checkapp.TestResult"
                    }
                },
                "NZBGet": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/checkapp.TestResult"
                    }
                },
                "Plex": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/checkapp.TestResult"
                    }
                },
                "Prowlarr": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/checkapp.TestResult"
                    }
                },
                "Qbittorrent": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/checkapp.TestResult"
                    }
                },
                "Radarr": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/checkapp.TestResult"
                    }
                },
                "Readarr": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/checkapp.TestResult"
                    }
                },
                "Rtorrent": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/checkapp.TestResult"
                    }
                },
                "SabNZB": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/checkapp.TestResult"
                    }
                },
                "Sonarr": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/checkapp.TestResult"
                    }
                },
                "Tautulli": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/checkapp.TestResult"
                    }
                },
                "Transmission": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/checkapp.TestResult"
                    }
                },
                "elapsed": {
                    "type": "integer"
                },
                "instances": {
                    "type": "integer"
                },
                "timeMS": {
                    "type": "integer"
                },
                "workers": {
                    "type": "integer"
                }
            }
        },
        "checkapp.TestResult": {
            "type": "object",
            "properties": {
                "config": {
                    "$ref": "#/definitions/apps.ExtraConfig"
                },
                "elapsed": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "client.BrowseDir": {
            "type": "object",
            "properties": {
                "dirs": {
                    "description": "Directories in the current directory.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "error": {
                    "description": "Error message.",
                    "type": "string"
                },
                "files": {
                    "description": "Files in the current directory.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "mom": {
                    "description": "Parent directory path.",
                    "type": "string"
                },
                "path": {
                    "description": "Current directory path.",
                    "type": "string"
                },
                "sep": {
                    "description": "Filepath separator.",
                    "type": "string"
                }
            }
        },
        "client.Integrations": {
            "type": "object",
            "properties": {
                "dashboard": {
                    "$ref": "#/definitions/dashboard.States"
                },
                "dashboardAge": {
                    "type": "string"
                },
                "lidarr": {
                    "type": "object",
                    "properties": {
                        "queue": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/lidarr.Queue"
                            }
                        },
                        "queueAge": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "status": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/lidarr.SystemStatus"
                            }
                        },
                        "statusAge": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "plex": {
                    "$ref": "#/definitions/plex.PMSInfo"
                },
                "plexAge": {
                    "type": "string"
                },
                "prowlarr": {
                    "type": "object",
                    "properties": {
                        "status": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/prowlarr.SystemStatus"
                            }
                        },
                        "statusAge": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "radarr": {
                    "type": "object",
                    "properties": {
                        "queue": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/radarr.Queue"
                            }
                        },
                        "queueAge": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "status": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/radarr.SystemStatus"
                            }
                        },
                        "statusAge": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "readarr": {
                    "type": "object",
                    "properties": {
                        "queue": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/readarr.Queue"
                            }
                        },
                        "queueAge": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "status": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/readarr.SystemStatus"
                            }
                        },
                        "statusAge": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "sessions": {
                    "$ref": "#/definitions/plex.Sessions"
                },
                "sessionsAge": {
                    "type": "string"
                },
                "snapshot": {
                    "$ref": "#/definitions/snapshot.Snapshot"
                },
                "snapshotAge": {
                    "type": "string"
                },
                "sonarr": {
                    "type": "object",
                    "properties": {
                        "queue": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/sonarr.Queue"
                            }
                        },
                        "queueAge": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "status": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/sonarr.SystemStatus"
                            }
                        },
                        "statusAge": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "tautulli": {
                    "$ref": "#/definitions/tautulli.Info"
                },
                "tautulliAge": {
                    "type": "string"
                },
                "tautulliUsers": {
                    "$ref": "#/definitions/tautulli.Users"
                },
                "tautulliUsersAge": {
                    "type": "string"
                }
            }
        },
        "client.PoolSize": {
            "type": "object",
            "properties": {
                "active": {
                    "type": "boolean"
                },
                "connecting": {
                    "type": "integer"
                },
                "disconnects": {
                    "type": "integer"
                },
                "idle": {
                    "type": "integer"
                },
                "lastConn": {
                    "type": "string"
                },
                "lastTry": {
                    "type": "string"
                },
                "running": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "client.Profile": {
            "type": "object",
            "properties": {
                "activeTunnel": {
                    "type": "string"
                },
                "arch": {
                    "type": "string"
                },
                "binary": {
                    "type": "string"
                },
                "branch": {
                    "type": "string"
                },
                "buildDate": {
                    "type": "string"
                },
                "buildUser": {
                    "type": "string"
                },
                "checkDisabled": {
                    "type": "boolean"
                },
                "checkResults": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/services.CheckResult"
                    }
                },
                "checkRunning": {
                    "type": "boolean"
                },
                "clientInfo": {
                    "$ref": "#/definitions/clientinfo.ClientInfo"
                },
                "cmdList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/cmdconfig.Config"
                    }
                },
                "config": {
                    "$ref": "#/definitions/configfile.Config"
                },
                "configFileInfo": {
                    "$ref": "#/definitions/logs.LogFileInfos"
                },
                "disks": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/snapshot.Partition"
                    }
                },
                "docker": {
                    "type": "boolean"
                },
                "dynamic": {
                    "type": "boolean"
                },
                "environment": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "expvar": {
                    "$ref": "#/definitions/mnd.AllData"
                },
                "flags": {
                    "$ref": "#/definitions/configfile.Flags"
                },
                "fortune": {
                    "type": "string"
                },
                "gateway": {
                    "type": "string"
                },
                "gid": {
                    "type": "integer"
                },
                "goVersion": {
                    "type": "string"
                },
                "headers": {
                    "$ref": "#/definitions/http.Header"
                },
                "hostInfo": {
                    "$ref": "#/definitions/host.InfoStat"
                },
                "ifName": {
                    "type": "string"
                },
                "ip": {
                    "type": "string"
                },
                "isDarwin": {
                    "type": "boolean"
                },
                "isDocker": {
                    "type": "boolean"
                },
                "isFreeBsd": {
                    "type": "boolean"
                },
                "isLinux": {
                    "type": "boolean"
                },
                "isSynology": {
                    "type": "boolean"
                },
                "isUnstable": {
                    "type": "boolean"
                },
                "isWindows": {
                    "type": "boolean"
                },
                "languages": {
                    "$ref": "#/definitions/frontend.Languages"
                },
                "logFileInfo": {
                    "$ref": "#/definitions/logs.LogFileInfos"
                },
                "loggedIn": {
                    "description": "LoggedIn is only used by the front end. Backend does not set or use it.",
                    "type": "boolean"
                },
                "md5": {
                    "type": "string"
                },
                "msg": {
                    "type": "string"
                },
                "netmask": {
                    "type": "string"
                },
                "os": {
                    "type": "string"
                },
                "plexAge": {
                    "type": "string"
                },
                "plexInfo": {
                    "$ref": "#/definitions/plex.PMSInfo"
                },
                "poolStats": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/client.PoolSize"
                    }
                },
                "program": {
                    "type": "string"
                },
                "proxyAllow": {
                    "type": "boolean"
                },
                "revision": {
                    "type": "string"
                },
                "schedules": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.TriggerInfo"
                    }
                },
                "siteCrons": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/crontimer.Timer"
                    }
                },
                "started": {
                    "type": "string"
                },
                "timers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.TriggerInfo"
                    }
                },
                "triggers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/common.TriggerInfo"
                    }
                },
                "tunnelPoolStats": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/client.PoolSize"
                    }
                },
                "uid": {
                    "type": "integer"
                },
                "updated": {
                    "type": "string"
                },
                "upstreamAllowed": {
                    "type": "boolean"
                },
                "upstreamHeader": {
                    "type": "string"
                },
                "upstreamIp": {
                    "type": "string"
                },
                "upstreamType": {
                    "$ref": "#/definitions/configfile.AuthType"
                },
                "username": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                },
                "webauth": {
                    "type": "boolean"
                }
            }
        },
        "client.ProfilePost": {
            "type": "object",
            "properties": {
                "authType": {
                    "$ref": "#/definitions/configfile.AuthType"
                },
                "header": {
                    "type": "string"
                },
                "newPass": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "upstreams": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "clientinfo.AllAppConfigs": {
            "type": "object",
            "properties": {
                "lidarr": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/clientinfo.AppConfig"
                    }
                },
                "prowlarr": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/clientinfo.AppConfig"
                    }
                },
                "radarr": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/clientinfo.AppConfig"
                    }
                },
                "readarr": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/clientinfo.AppConfig"
                    }
                },
                "sonarr": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/clientinfo.AppConfig"
                    }
                }
            }
        },
        "clientinfo.AppConfig": {
            "type": "object",
            "properties": {
                "backup": {
                    "type": "string"
                },
                "corrupt": {
                    "type": "string"
                },
                "finished": {
                    "type": "boolean"
                },
                "instance": {
                    "type": "integer"
                },
                "interval": {
                    "$ref": "#/definitions/cnfg.Duration"
                },
                "name": {
                    "type": "string"
                },
                "stuck": {
                    "type": "boolean"
                }
            }
        },
        "clientinfo.ClientInfo": {
            "type": "object",
            "properties": {
                "actions": {
                    "type": "object",
                    "properties": {
                        "apps": {
                            "description": "Site Config for Starr.",
                            "allOf": [
                                {
                                    "$ref": "#/definitions/clientinfo.AllAppConfigs"
                                }
                            ]
                        },
                        "custom": {
                            "description": "Site config for Custom Crons.",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/clientinfo.CronConfig"
                            }
                        },
                        "dashboard": {
                            "description": "Site Config for Dashboard.",
                            "allOf": [
                                {
                                    "$ref": "#/definitions/clientinfo.DashConfig"
                                }
                            ]
                        },
                        "gaps": {
                            "description": "Site Config for Radarr Gaps.",
                            "allOf": [
                                {
                                    "$ref": "#/definitions/clientinfo.GapsConfig"
                                }
                            ]
                        },
                        "mdblist": {
                            "description": "Site Config for MDB List.",
                            "allOf": [
                                {
                                    "$ref": "#/definitions/clientinfo.MdbListConfig"
                                }
                            ]
                        },
                        "plex": {
                            "description": "Site Config for Plex.",
                            "allOf": [
                                {
                                    "$ref": "#/definitions/plex.WebsiteConfig"
                                }
                            ]
                        },
                        "snapshot": {
                            "description": "Site Config for System Snapshot.",
                            "allOf": [
                                {
                                    "$ref": "#/definitions/snapshot.Config"
                                }
                            ]
                        },
                        "sync": {
                            "description": "Site Config for TRaSH Sync.",
                            "allOf": [
                                {
                                    "$ref": "#/definitions/clientinfo.SyncConfig"
                                }
                            ]
                        }
                    }
                },
                "integrityCheck": {
                    "type": "boolean"
                },
                "user": {
                    "type": "object",
                    "properties": {
                        "dateFormat": {
                            "description": "This is the date format the user selected on the website.",
                            "allOf": [
                                {
                                    "$ref": "#/definitions/clientinfo.PHPDate"
                                }
                            ]
                        },
                        "devAllowed": {
                            "description": "Is the user allowed to use non-production website apis?",
                            "type": "boolean"
                        },
                        "id": {
                            "description": "user id from notifiarr db."
                        },
                        "mulery": {
                            "description": "List of tunnels that notifiarr.com recognizes.\nAny of these may be used.",
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/clientinfo.MuleryServer"
                            }
                        },
                        "patron": {
                            "description": "Is the user a patron?",
                            "type": "boolean"
                        },
                        "stopLogs": {
                            "description": "The website can use this to tell the client not to send any logs.",
                            "type": "boolean"
                        },
                        "subscriber": {
                            "description": "Is the user a subscriber?",
                            "type": "boolean"
                        },
                        "tunnelUrl": {
                            "description": "This is the URL the website uses to connect to the client.\nIt's just for info/debug here, and not used by the client.",
                            "type": "string"
                        },
                        "tunnels": {
                            "description": "This is the list of tunnels the website tells the client to connect to.",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        },
                        "welcome": {
                            "description": "This is printed on startup and on the UI landing page.",
                            "type": "string"
                        }
                    }
                }
            }
        },
        "clientinfo.CronConfig": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "endpoint": {
                    "description": "endpoint for the URI.",
                    "type": "string"
                },
                "interval": {
                    "description": "how often to GET this URI.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/cnfg.Duration"
                        }
                    ]
                },
                "name": {
                    "description": "name of action.",
                    "type": "string"
                }
            }
        },
        "clientinfo.DashConfig": {
            "type": "object",
            "properties": {
                "deluge": {
                    "type": "boolean"
                },
                "interval": {
                    "description": "how often to fire.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/cnfg.Duration"
                        }
                    ]
                },
                "lidarr": {
                    "type": "boolean"
                },
                "nzbget": {
                    "type": "boolean"
                },
                "plex": {
                    "type": "boolean"
                },
                "qbit": {
                    "type": "boolean"
                },
                "radarr": {
                    "type": "boolean"
                },
                "readarr": {
                    "type": "boolean"
                },
                "rtorrent": {
                    "type": "boolean"
                },
                "sabnzbd": {
                    "type": "boolean"
                },
                "sonarr": {
                    "type": "boolean"
                },
                "transmission": {
                    "type": "boolean"
                }
            }
        },
        "clientinfo.GapsConfig": {
            "type": "object",
            "properties": {
                "instances": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "interval": {
                    "$ref": "#/definitions/cnfg.Duration"
                }
            }
        },
        "clientinfo.MdbListConfig": {
            "type": "object",
            "properties": {
                "interval": {
                    "description": "how often to fire.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/cnfg.Duration"
                        }
                    ]
                },
                "radarr": {
                    "description": "which instance IDs we sync",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "sonarr": {
                    "description": "which instance IDs we sync",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "clientinfo.MuleryServer": {
            "type": "object",
            "properties": {
                "location": {
                    "description": "ex: \"Nairobi, Kenya, Africa\"",
                    "type": "string"
                },
                "socket": {
                    "description": "ex: \"wss://africa.notifiarr.com/register\"",
                    "type": "string"
                },
                "tunnel": {
                    "description": "ex: \"https://africa.notifiarr.com/\"",
                    "type": "string"
                }
            }
        },
        "clientinfo.PHPDate": {
            "type": "object",
            "properties": {
                "fmt": {
                    "type": "string"
                },
                "php": {
                    "type": "string"
                }
            }
        },
        "clientinfo.SyncConfig": {
            "type": "object",
            "properties": {
                "interval": {
                    "description": "how often to fire.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/cnfg.Duration"
                        }
                    ]
                },
                "lidarrInstances": {
                    "description": "which instance IDs we sync",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "lidarrSync": {
                    "description": "items in sync.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "radarrInstances": {
                    "description": "which instance IDs we sync",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "radarrSync": {
                    "description": "items in sync.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "sonarrInstances": {
                    "description": "which instance IDs we sync",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "sonarrSync": {
                    "description": "items in sync.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "cmdconfig.Config": {
            "type": "object",
            "properties": {
                "argValues": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "args": {
                    "description": "Args and ArgValues are not config items. They are calculated on startup.",
                    "type": "integer"
                },
                "command": {
                    "type": "string"
                },
                "hash": {
                    "type": "string"
                },
                "log": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "notify": {
                    "type": "boolean"
                },
                "shell": {
                    "type": "boolean"
                },
                "timeout": {
                    "$ref": "#/definitions/cnfg.Duration"
                }
            }
        },
        "cnfg.Duration": {
            "type": "object",
            "properties": {
                "time.Duration": {
                    "type": "integer",
                    "format": "int64",
                    "enum": [
                        -9223372036854775808,
                        9223372036854775807,
                        1,
                        1000,
                        1000000,
                        1000000000,
                        60000000000,
                        3600000000000,
                        -9223372036854775808,
                        9223372036854775807,
                        1,
                        1000,
                        1000000,
                        1000000000,
                        60000000000,
                        3600000000000
                    ],
                    "x-enum-varnames": [
                        "minDuration",
                        "maxDuration",
                        "Nanosecond",
                        "Microsecond",
                        "Millisecond",
                        "Second",
                        "Minute",
                        "Hour",
                        "minDuration",
                        "maxDuration",
                        "Nanosecond",
                        "Microsecond",
                        "Millisecond",
                        "Second",
                        "Minute",
                        "Hour"
                    ]
                }
            }
        },
        "commands.Command": {
            "type": "object",
            "properties": {
                "argValues": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "args": {
                    "description": "Args and ArgValues are not config items. They are calculated on startup.",
                    "type": "integer"
                },
                "command": {
                    "type": "string"
                },
                "hash": {
                    "type": "string"
                },
                "log": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "notify": {
                    "type": "boolean"
                },
                "shell": {
                    "type": "boolean"
                },
                "timeout": {
                    "$ref": "#/definitions/cnfg.Duration"
                }
            }
        },
        "common.TriggerInfo": {
            "type": "object",
            "properties": {
                "cron": {
                    "$ref": "#/definitions/scheduler.CronJob"
                },
                "interval": {
                    "type": "integer"
                },
                "key": {
                    "type": "string"
                },
                "kind": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "runs": {
                    "type": "integer"
                }
            }
        },
        "configfile.AuthType": {
            "type": "integer",
            "enum": [
                0,
                1,
                2
            ],
            "x-enum-varnames": [
                "AuthPassword",
                "AuthHeader",
                "AuthNone"
            ]
        },
        "configfile.Config": {
            "type": "object",
            "properties": {
                "apiKey": {
                    "type": "string"
                },
                "apt": {
                    "type": "boolean"
                },
                "autoUpdate": {
                    "type": "string"
                },
                "bindAddr": {
                    "type": "string"
                },
                "commands": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/commands.Command"
                    }
                },
                "debug": {
                    "type": "boolean"
                },
                "debugLog": {
                    "type": "string"
                },
                "deluge": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/apps.DelugeConfig"
                    }
                },
                "endpoints": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/epconfig.Endpoint"
                    }
                },
                "extraKeys": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "fileMode": {
                    "$ref": "#/definitions/logs.FileMode"
                },
                "hostId": {
                    "type": "string"
                },
                "httpLog": {
                    "type": "string"
                },
                "lidarr": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/apps.StarrConfig"
                    }
                },
                "logFile": {
                    "type": "string"
                },
                "logFileMb": {
                    "type": "integer"
                },
                "logFiles": {
                    "type": "integer"
                },
                "maxBody": {
                    "type": "integer"
                },
                "noUploads": {
                    "type": "boolean"
                },
                "nzbget": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/apps.NZBGetConfig"
                    }
                },
                "plex": {
                    "$ref": "#/definitions/apps.PlexConfig"
                },
                "prowlarr": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/apps.StarrConfig"
                    }
                },
                "qbit": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/apps.QbitConfig"
                    }
                },
                "quiet": {
                    "type": "boolean"
                },
                "radarr": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/apps.StarrConfig"
                    }
                },
                "readarr": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/apps.StarrConfig"
                    }
                },
                "retries": {
                    "type": "integer"
                },
                "rtorrent": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/apps.RtorrentConfig"
                    }
                },
                "sabnzbd": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/apps.SabNZBConfig"
                    }
                },
                "serial": {
                    "type": "boolean"
                },
                "service": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/services.ServiceConfig"
                    }
                },
                "services": {
                    "$ref": "#/definitions/services.Config"
                },
                "snapshot": {
                    "$ref": "#/definitions/snapshot.Config"
                },
                "sonarr": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/apps.StarrConfig"
                    }
                },
                "sslCertFile": {
                    "type": "string"
                },
                "sslKeyFile": {
                    "type": "string"
                },
                "tautulli": {
                    "$ref": "#/definitions/apps.TautulliConfig"
                },
                "timeout": {
                    "$ref": "#/definitions/cnfg.Duration"
                },
                "transmission": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/apps.XmissionConfig"
                    }
                },
                "uiPassword": {
                    "type": "string"
                },
                "unstableCh": {
                    "type": "boolean"
                },
                "upstreams": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "urlbase": {
                    "type": "string"
                },
                "version": {
                    "type": "integer"
                },
                "watchFiles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/filewatch.WatchFile"
                    }
                }
            }
        },
        "configfile.Flags": {
            "type": "object",
            "properties": {
                "aptHook": {
                    "type": "boolean"
                },
                "configFile": {
                    "type": "string"
                },
                "curl": {
                    "type": "string"
                },
                "envPrefix": {
                    "type": "string"
                },
                "extraConf": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "fortune": {
                    "type": "boolean"
                },
                "headers": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "longVerReq": {
                    "type": "boolean"
                },
                "pslist": {
                    "type": "boolean"
                },
                "reset": {
                    "type": "boolean"
                },
                "restart": {
                    "type": "boolean"
                },
                "updated": {
                    "type": "boolean"
                },
                "verReq": {
                    "type": "boolean"
                },
                "write": {
                    "type": "string"
                }
            }
        },
        "cpu.TimesStat": {
            "type": "object",
            "properties": {
                "cpu": {
                    "type": "string"
                },
                "guest": {
                    "type": "number"
                },
                "guestNice": {
                    "type": "number"
                },
                "idle": {
                    "type": "number"
                },
                "iowait": {
                    "type": "number"
                },
                "irq": {
                    "type": "number"
                },
                "nice": {
                    "type": "number"
                },
                "softirq": {
                    "type": "number"
                },
                "steal": {
                    "type": "number"
                },
                "system": {
                    "type": "number"
                },
                "user": {
                    "type": "number"
                }
            }
        },
        "crontimer.Timer": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "endpoint": {
                    "description": "endpoint for the URI.",
                    "type": "string"
                },
                "interval": {
                    "description": "how often to GET this URI.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/cnfg.Duration"
                        }
                    ]
                },
                "name": {
                    "description": "name of action.",
                    "type": "string"
                }
            }
        },
        "dashboard.Sortable": {
            "type": "object",
            "properties": {
                "date": {
                    "type": "string"
                },
                "episode": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "season": {
                    "type": "integer"
                },
                "subName": {
                    "type": "string"
                }
            }
        },
        "dashboard.State": {
            "type": "object",
            "properties": {
                "albums": {
                    "type": "integer"
                },
                "artists": {
                    "description": "Lidarr",
                    "type": "integer"
                },
                "authors": {
                    "description": "Readarr",
                    "type": "integer"
                },
                "books": {
                    "type": "integer"
                },
                "day": {
                    "type": "integer"
                },
                "downloaded": {
                    "type": "integer"
                },
                "downloading": {
                    "type": "integer"
                },
                "downloads": {
                    "description": "Downloader",
                    "type": "integer"
                },
                "editions": {
                    "type": "integer"
                },
                "elapsed": {
                    "description": "How long it took.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/cnfg.Duration"
                        }
                    ]
                },
                "episodes": {
                    "type": "integer"
                },
                "error": {
                    "description": "Shared",
                    "type": "string"
                },
                "errors": {
                    "type": "integer"
                },
                "incomplete": {
                    "type": "integer"
                },
                "instance": {
                    "type": "integer"
                },
                "latest": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dashboard.Sortable"
                    }
                },
                "missing": {
                    "type": "integer"
                },
                "month": {
                    "type": "integer"
                },
                "movies": {
                    "description": "Radarr",
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "next": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dashboard.Sortable"
                    }
                },
                "onDisk": {
                    "type": "integer"
                },
                "paused": {
                    "type": "integer"
                },
                "percent": {
                    "type": "number"
                },
                "seeding": {
                    "type": "integer"
                },
                "shows": {
                    "description": "Sonarr",
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                },
                "tracks": {
                    "type": "integer"
                },
                "upcoming": {
                    "type": "integer"
                },
                "uploaded": {
                    "type": "integer"
                },
                "uploading": {
                    "type": "integer"
                },
                "week": {
                    "type": "integer"
                }
            }
        },
        "dashboard.States": {
            "type": "object",
            "properties": {
                "deluge": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dashboard.State"
                    }
                },
                "lidarr": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dashboard.State"
                    }
                },
                "nzbget": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dashboard.State"
                    }
                },
                "plexSessions": {},
                "qbit": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dashboard.State"
                    }
                },
                "radarr": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dashboard.State"
                    }
                },
                "readarr": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dashboard.State"
                    }
                },
                "rtorrent": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dashboard.State"
                    }
                },
                "sabnzbd": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dashboard.State"
                    }
                },
                "sonarr": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dashboard.State"
                    }
                },
                "transmission": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dashboard.State"
                    }
                }
            }
        },
        "disk.IOCountersStat": {
            "type": "object",
            "properties": {
                "ioTime": {
                    "type": "integer"
                },
                "iopsInProgress": {
                    "type": "integer"
                },
                "label": {
                    "type": "string"
                },
                "mergedReadCount": {
                    "type": "integer"
                },
                "mergedWriteCount": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "readBytes": {
                    "type": "integer"
                },
                "readCount": {
                    "type": "integer"
                },
                "readTime": {
                    "type": "integer"
                },
                "serialNumber": {
                    "type": "string"
                },
                "weightedIO": {
                    "type": "integer"
                },
                "writeBytes": {
                    "type": "integer"
                },
                "writeCount": {
                    "type": "integer"
                },
                "writeTime": {
                    "type": "integer"
                }
            }
        },
        "epconfig.Endpoint": {
            "type": "object",
            "properties": {
                "atTimes": {
                    "description": "AtTimes is a list of 'hours, minutes, seconds' to schedule for Daily/Weekly/Monthly frequencies.\nAlso used in Minutely and Hourly schedules, a bit awkwardly.",
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "body": {
                    "type": "string"
                },
                "daysOfMonth": {
                    "description": "DaysOfMonth is a list of days to schedule. 1 to 31 or -31 to -1 to count backward.",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "daysOfWeek": {
                    "description": "DaysOfWeek is a list of days to schedule. 0-6. 0 = Sunday.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/scheduler.Weekday"
                    }
                },
                "follow": {
                    "description": "redirects",
                    "type": "boolean"
                },
                "frequency": {
                    "description": "Frequency to configure the job. Pass 0 disable the cron.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/scheduler.Frequency"
                        }
                    ]
                },
                "header": {
                    "$ref": "#/definitions/http.Header"
                },
                "interval": {
                    "description": "Interval for Daily, Weekly and Monthly Frequencies. 1 = every day/week/month, 2 = every other, and so on.",
                    "type": "integer"
                },
                "method": {
                    "type": "string"
                },
                "months": {
                    "description": "Months to schedule. 1 to 12. 1 = January.",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "name": {
                    "type": "string"
                },
                "query": {
                    "$ref": "#/definitions/url.Values"
                },
                "template": {
                    "type": "string"
                },
                "timeout": {
                    "$ref": "#/definitions/cnfg.Duration"
                },
                "url": {
                    "type": "string"
                },
                "validSsl": {
                    "description": "https only",
                    "type": "boolean"
                }
            }
        },
        "filewatch.WatchFile": {
            "type": "object",
            "properties": {
                "disabled": {
                    "type": "boolean"
                },
                "logMatch": {
                    "type": "boolean"
                },
                "mustExist": {
                    "type": "boolean"
                },
                "path": {
                    "type": "string"
                },
                "pipe": {
                    "type": "boolean"
                },
                "poll": {
                    "type": "boolean"
                },
                "regex": {
                    "type": "string"
                },
                "skip": {
                    "type": "string"
                }
            }
        },
        "frontend.Languages": {
            "type": "object",
            "additionalProperties": {
                "type": "object",
                "additionalProperties": {
                    "$ref": "#/definitions/frontend.LocalizedLanguage"
                }
            }
        },
        "frontend.LocalizedLanguage": {
            "type": "object",
            "properties": {
                "code": {
                    "description": "Code is the language code of the language.",
                    "type": "string"
                },
                "lang": {
                    "description": "Lang is the parent language code this language Name is localized to.",
                    "type": "string"
                },
                "name": {
                    "description": "Name is the display name of the language localized to the parent (Lang) language.",
                    "type": "string"
                },
                "self": {
                    "description": "Self is the display name of the language localized in its own language.",
                    "type": "string"
                }
            }
        },
        "host.InfoStat": {
            "type": "object",
            "properties": {
                "bootTime": {
                    "type": "integer"
                },
                "hostId": {
                    "description": "ex: uuid",
                    "type": "string"
                },
                "hostname": {
                    "type": "string"
                },
                "kernelArch": {
                    "description": "native cpu architecture queried at runtime, as returned by `uname -m` or empty string in case of error",
                    "type": "string"
                },
                "kernelVersion": {
                    "description": "version of the OS kernel (if available)",
                    "type": "string"
                },
                "os": {
                    "description": "ex: freebsd, linux",
                    "type": "string"
                },
                "platform": {
                    "description": "ex: ubuntu, linuxmint",
                    "type": "string"
                },
                "platformFamily": {
                    "description": "ex: debian, rhel",
                    "type": "string"
                },
                "platformVersion": {
                    "description": "version of the complete OS",
                    "type": "string"
                },
                "procs": {
                    "description": "number of processes",
                    "type": "integer"
                },
                "uptime": {
                    "type": "integer"
                },
                "virtualizationRole": {
                    "description": "guest or host",
                    "type": "string"
                },
                "virtualizationSystem": {
                    "type": "string"
                }
            }
        },
        "http.Header": {
            "type": "object",
            "additionalProperties": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            }
        },
        "lidarr.Queue": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                },
                "records": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/lidarr.QueueRecord"
                    }
                },
                "sortDirection": {
                    "type": "string"
                },
                "sortKey": {
                    "type": "string"
                },
                "totalRecords": {
                    "type": "integer"
                }
            }
        },
        "lidarr.QueueRecord": {
            "type": "object",
            "properties": {
                "albumId": {
                    "type": "integer"
                },
                "artistId": {
                    "type": "integer"
                },
                "downloadClient": {
                    "type": "string"
                },
                "downloadClientHasPostImportCategory": {
                    "type": "boolean"
                },
                "downloadForced": {
                    "type": "boolean"
                },
                "downloadId": {
                    "type": "string"
                },
                "errorMessage": {
                    "type": "string"
                },
                "estimatedCompletionTime": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "indexer": {
                    "type": "string"
                },
                "outputPath": {
                    "type": "string"
                },
                "protocol": {
                    "$ref": "#/definitions/starr.Protocol"
                },
                "quality": {
                    "$ref": "#/definitions/starr.Quality"
                },
                "size": {
                    "type": "number"
                },
                "sizeleft": {
                    "type": "number"
                },
                "status": {
                    "type": "string"
                },
                "statusMessages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/starr.StatusMessage"
                    }
                },
                "timeleft": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "trackedDownloadStatus": {
                    "type": "string"
                }
            }
        },
        "lidarr.SystemStatus": {
            "type": "object",
            "properties": {
                "appData": {
                    "type": "string"
                },
                "appName": {
                    "type": "string"
                },
                "authentication": {
                    "type": "string"
                },
                "branch": {
                    "type": "string"
                },
                "buildTime": {
                    "type": "string"
                },
                "instanceName": {
                    "type": "string"
                },
                "isAdmin": {
                    "type": "boolean"
                },
                "isDebug": {
                    "type": "boolean"
                },
                "isDocker": {
                    "type": "boolean"
                },
                "isLinux": {
                    "type": "boolean"
                },
                "isNetCore": {
                    "type": "boolean"
                },
                "isOsx": {
                    "type": "boolean"
                },
                "isProduction": {
                    "type": "boolean"
                },
                "isUserInteractive": {
                    "type": "boolean"
                },
                "isWindows": {
                    "type": "boolean"
                },
                "migrationVersion": {
                    "type": "integer"
                },
                "mode": {
                    "type": "string"
                },
                "osName": {
                    "type": "string"
                },
                "packageAuthor": {
                    "type": "string"
                },
                "packageUpdateMechanism": {
                    "type": "string"
                },
                "packageVersion": {
                    "type": "string"
                },
                "runtimeName": {
                    "type": "string"
                },
                "runtimeVersion": {
                    "type": "string"
                },
                "sqliteVersion": {
                    "type": "string"
                },
                "startTime": {
                    "type": "string"
                },
                "startupPath": {
                    "type": "string"
                },
                "urlBase": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "logs.FileMode": {
            "type": "integer",
            "format": "int32",
            "enum": [
                2147483648,
                1073741824,
                536870912,
                268435456,
                134217728,
                67108864,
                33554432,
                16777216,
                8388608,
                4194304,
                2097152,
                1048576,
                524288,
                2401763328,
                511,
                2147483648,
                1073741824,
                536870912,
                268435456,
                134217728,
                67108864,
                33554432,
                16777216,
                8388608,
                4194304,
                2097152,
                1048576,
                524288,
                2401763328,
                511,
                2147483648,
                1073741824,
                536870912,
                268435456,
                134217728,
                67108864,
                33554432,
                16777216,
                8388608,
                4194304,
                2097152,
                1048576,
                524288,
                2401763328,
                511,
                2147483648,
                1073741824,
                536870912,
                268435456,
                134217728,
                67108864,
                33554432,
                16777216,
                8388608,
                4194304,
                2097152,
                1048576,
                524288,
                2401763328,
                511
            ],
            "x-enum-comments": {
                "ModeAppend": "a: append-only",
                "ModeCharDevice": "c: Unix character device, when ModeDevice is set",
                "ModeDevice": "D: device file",
                "ModeDir": "d: is a directory",
                "ModeExclusive": "l: exclusive use",
                "ModeIrregular": "?: non-regular file; nothing else is known about this file",
                "ModeNamedPipe": "p: named pipe (FIFO)",
                "ModePerm": "Unix permission bits, 0o777",
                "ModeSetgid": "g: setgid",
                "ModeSetuid": "u: setuid",
                "ModeSocket": "S: Unix domain socket",
                "ModeSticky": "t: sticky",
                "ModeSymlink": "L: symbolic link",
                "ModeTemporary": "T: temporary file; Plan 9 only"
            },
            "x-enum-descriptions": [
                "d: is a directory",
                "a: append-only",
                "l: exclusive use",
                "T: temporary file; Plan 9 only",
                "L: symbolic link",
                "D: device file",
                "p: named pipe (FIFO)",
                "S: Unix domain socket",
                "u: setuid",
                "g: setgid",
                "c: Unix character device, when ModeDevice is set",
                "t: sticky",
                "?: non-regular file; nothing else is known about this file",
                "",
                "Unix permission bits, 0o777",
                "d: is a directory",
                "a: append-only",
                "l: exclusive use",
                "T: temporary file; Plan 9 only",
                "L: symbolic link",
                "D: device file",
                "p: named pipe (FIFO)",
                "S: Unix domain socket",
                "u: setuid",
                "g: setgid",
                "c: Unix character device, when ModeDevice is set",
                "t: sticky",
                "?: non-regular file; nothing else is known about this file",
                "",
                "Unix permission bits, 0o777"
            ],
            "x-enum-varnames": [
                "ModeDir",
                "ModeAppend",
                "ModeExclusive",
                "ModeTemporary",
                "ModeSymlink",
                "ModeDevice",
                "ModeNamedPipe",
                "ModeSocket",
                "ModeSetuid",
                "ModeSetgid",
                "ModeCharDevice",
                "ModeSticky",
                "ModeIrregular",
                "ModeType",
                "ModePerm",
                "ModeDir",
                "ModeAppend",
                "ModeExclusive",
                "ModeTemporary",
                "ModeSymlink",
                "ModeDevice",
                "ModeNamedPipe",
                "ModeSocket",
                "ModeSetuid",
                "ModeSetgid",
                "ModeCharDevice",
                "ModeSticky",
                "ModeIrregular",
                "ModeType",
                "ModePerm"
            ]
        },
        "logs.LogFileInfo": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "mode": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "size": {
                    "type": "integer"
                },
                "time": {
                    "type": "string"
                },
                "used": {
                    "type": "boolean"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "logs.LogFileInfos": {
            "type": "object",
            "properties": {
                "dirs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "list": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/logs.LogFileInfo"
                    }
                },
                "size": {
                    "type": "integer"
                }
            }
        },
        "mnd.AllData": {
            "type": "object",
            "properties": {
                "apiHits": {
                    "type": "object",
                    "additionalProperties": true
                },
                "apps": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object",
                        "additionalProperties": true
                    }
                },
                "fileWatcher": {
                    "type": "object",
                    "additionalProperties": true
                },
                "httpRequests": {
                    "type": "object",
                    "additionalProperties": true
                },
                "logFiles": {
                    "type": "object",
                    "additionalProperties": true
                },
                "serviceChecks": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object",
                        "additionalProperties": true
                    }
                },
                "timerCounts": {
                    "type": "object",
                    "additionalProperties": true
                },
                "timerEvents": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "object",
                        "additionalProperties": true
                    }
                },
                "website": {
                    "type": "object",
                    "additionalProperties": true
                }
            }
        },
        "plex.Directory": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "integer"
                },
                "key": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "plex.GUID": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "plex.Media": {
            "type": "object",
            "properties": {
                "Part": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/plex.MediaPart"
                    }
                },
                "aspectRatio": {
                    "type": "string"
                },
                "audioChannels": {
                    "type": "integer"
                },
                "audioCodec": {
                    "type": "string"
                },
                "audioProfile": {
                    "type": "string"
                },
                "bitrate": {
                    "type": "number"
                },
                "container": {
                    "type": "string"
                },
                "duration": {
                    "type": "number"
                },
                "height": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "optimizedForStreaming": {
                    "type": "boolean"
                },
                "protocol": {
                    "type": "string"
                },
                "selected": {
                    "type": "boolean"
                },
                "videoCodec": {
                    "type": "string"
                },
                "videoFrameRate": {
                    "type": "string"
                },
                "videoProfile": {
                    "type": "string"
                },
                "videoResolution": {
                    "type": "string"
                },
                "width": {
                    "type": "integer"
                }
            }
        },
        "plex.MediaPart": {
            "type": "object",
            "properties": {
                "Stream": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/plex.MediaStream"
                    }
                },
                "audioProfile": {
                    "type": "string"
                },
                "bitrate": {
                    "type": "number"
                },
                "container": {
                    "type": "string"
                },
                "decision": {
                    "type": "string"
                },
                "duration": {
                    "type": "number"
                },
                "file": {
                    "type": "string"
                },
                "height": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "indexes": {
                    "type": "string"
                },
                "key": {
                    "type": "string"
                },
                "optimizedForStreaming": {
                    "type": "boolean"
                },
                "protocol": {
                    "type": "string"
                },
                "selected": {
                    "type": "boolean"
                },
                "size": {
                    "type": "integer"
                },
                "videoProfile": {
                    "type": "string"
                },
                "width": {
                    "type": "integer"
                }
            }
        },
        "plex.MediaStream": {
            "type": "object",
            "properties": {
                "audioChannelLayout": {
                    "type": "string"
                },
                "bitDepth": {
                    "type": "integer"
                },
                "bitrate": {
                    "type": "number"
                },
                "bitrateMode": {
                    "type": "string"
                },
                "channels": {
                    "type": "integer"
                },
                "chromaLocation": {
                    "type": "string"
                },
                "chromaSubsampling": {
                    "type": "string"
                },
                "codec": {
                    "type": "string"
                },
                "codedHeight": {
                    "type": "integer"
                },
                "codedWidth": {
                    "type": "integer"
                },
                "colorPrimaries": {
                    "type": "string"
                },
                "colorTrc": {
                    "type": "string"
                },
                "decision": {
                    "type": "string"
                },
                "default": {
                    "type": "boolean"
                },
                "displayTitle": {
                    "type": "string"
                },
                "extendedDisplayTitle": {
                    "type": "string"
                },
                "frameRate": {
                    "type": "number"
                },
                "hasScalingMatrix": {
                    "type": "boolean"
                },
                "height": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "index": {
                    "type": "integer"
                },
                "language": {
                    "type": "string"
                },
                "languageCode": {
                    "type": "string"
                },
                "languageTag": {
                    "type": "string"
                },
                "level": {
                    "type": "integer"
                },
                "location": {
                    "type": "string"
                },
                "profile": {
                    "type": "string"
                },
                "refFrames": {
                    "type": "integer"
                },
                "samplingRate": {
                    "type": "integer"
                },
                "scanType": {
                    "type": "string"
                },
                "selected": {
                    "type": "boolean"
                },
                "streamType": {
                    "type": "integer"
                },
                "width": {
                    "type": "integer"
                }
            }
        },
        "plex.PMSInfo": {
            "type": "object",
            "properties": {
                "Directory": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/plex.Directory"
                    }
                },
                "allowCameraUpload": {
                    "type": "boolean"
                },
                "allowChannelAccess": {
                    "type": "boolean"
                },
                "allowSharing": {
                    "type": "boolean"
                },
                "allowSync": {
                    "type": "boolean"
                },
                "allowTuners": {
                    "type": "boolean"
                },
                "backgroundProcessing": {
                    "type": "boolean"
                },
                "certificate": {
                    "type": "boolean"
                },
                "companionProxy": {
                    "type": "boolean"
                },
                "countryCode": {
                    "type": "string"
                },
                "diagnostics": {
                    "type": "string"
                },
                "eventStream": {
                    "type": "boolean"
                },
                "friendlyName": {
                    "type": "string"
                },
                "hubSearch": {
                    "type": "boolean"
                },
                "itemClusters": {
                    "type": "boolean"
                },
                "livetv": {
                    "type": "integer"
                },
                "machineIdentifier": {
                    "type": "string"
                },
                "maxUploadBitrate": {
                    "type": "integer"
                },
                "maxUploadBitrateReason": {
                    "type": "string"
                },
                "maxUploadBitrateReasonMessage": {
                    "type": "string"
                },
                "mediaProviders": {
                    "type": "boolean"
                },
                "multiuser": {
                    "type": "boolean"
                },
                "myPlex": {
                    "type": "boolean"
                },
                "myPlexMappingState": {
                    "type": "string"
                },
                "myPlexSigninState": {
                    "type": "string"
                },
                "myPlexSubscription": {
                    "type": "boolean"
                },
                "myPlexUsername": {
                    "type": "string"
                },
                "offlineTranscode": {
                    "type": "integer"
                },
                "ownerFeatures": {
                    "type": "string"
                },
                "photoAutoTag": {
                    "type": "boolean"
                },
                "platform": {
                    "type": "string"
                },
                "platformVersion": {
                    "type": "string"
                },
                "pluginHost": {
                    "type": "boolean"
                },
                "pushNotifications": {
                    "type": "boolean"
                },
                "readOnlyLibraries": {
                    "type": "boolean"
                },
                "requestParametersInCookie": {
                    "type": "boolean"
                },
                "size": {
                    "type": "integer"
                },
                "streamingBrainABRVersion": {
                    "type": "integer"
                },
                "streamingBrainVersion": {
                    "type": "integer"
                },
                "sync": {
                    "type": "boolean"
                },
                "transcoderActiveVideoSessions": {
                    "type": "integer"
                },
                "transcoderAudio": {
                    "type": "boolean"
                },
                "transcoderLyrics": {
                    "type": "boolean"
                },
                "transcoderPhoto": {
                    "type": "boolean"
                },
                "transcoderSubtitles": {
                    "type": "boolean"
                },
                "transcoderVideo": {
                    "type": "boolean"
                },
                "transcoderVideoBitrates": {
                    "type": "string"
                },
                "transcoderVideoQualities": {
                    "type": "string"
                },
                "transcoderVideoResolutions": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "integer"
                },
                "updater": {
                    "type": "boolean"
                },
                "version": {
                    "type": "string"
                },
                "voiceSearch": {
                    "type": "boolean"
                }
            }
        },
        "plex.Player": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "device": {
                    "type": "string"
                },
                "local": {
                    "type": "boolean"
                },
                "machineIdentifier": {
                    "type": "string"
                },
                "model": {
                    "type": "string"
                },
                "platform": {
                    "type": "string"
                },
                "platformVersion": {
                    "type": "string"
                },
                "product": {
                    "type": "string"
                },
                "profile": {
                    "type": "string"
                },
                "relayed": {
                    "type": "boolean"
                },
                "remotePublicAddress": {
                    "type": "string"
                },
                "secure": {
                    "type": "boolean"
                },
                "state": {
                    "type": "string"
                },
                "stateTime": {
                    "description": "this is not a plex item. We calculate this.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/plex.structDur"
                        }
                    ]
                },
                "title": {
                    "type": "string"
                },
                "userID": {
                    "type": "integer"
                },
                "vendor": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "plex.Rating": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "value": {}
            }
        },
        "plex.Session": {
            "type": "object",
            "properties": {
                "Guid": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/plex.GUID"
                    }
                },
                "Media": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/plex.Media"
                    }
                },
                "Player": {
                    "$ref": "#/definitions/plex.Player"
                },
                "Rating": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/plex.Rating"
                    }
                },
                "Session": {
                    "type": "object",
                    "properties": {
                        "bandwidth": {
                            "type": "integer"
                        },
                        "id": {
                            "type": "string"
                        },
                        "location": {
                            "type": "string"
                        }
                    }
                },
                "TranscodeSession": {
                    "$ref": "#/definitions/plex.Transcode"
                },
                "User": {
                    "$ref": "#/definitions/plex.User"
                },
                "addedAt": {
                    "type": "integer"
                },
                "art": {
                    "type": "string"
                },
                "audienceRating": {
                    "type": "number"
                },
                "audienceRatingImage": {
                    "type": "string"
                },
                "contentRating": {
                    "type": "string"
                },
                "duration": {
                    "type": "number"
                },
                "grandparentArt": {
                    "type": "string"
                },
                "grandparentGuid": {
                    "type": "string"
                },
                "grandparentKey": {
                    "type": "string"
                },
                "grandparentRatingKey": {
                    "type": "string"
                },
                "grandparentTheme": {
                    "type": "string"
                },
                "grandparentThumb": {
                    "type": "string"
                },
                "grandparentTitle": {
                    "type": "string"
                },
                "guid": {
                    "type": "string"
                },
                "index": {
                    "type": "integer"
                },
                "key": {
                    "type": "string"
                },
                "lastViewedAt": {
                    "type": "integer"
                },
                "librarySectionID": {
                    "type": "string"
                },
                "librarySectionKey": {
                    "type": "string"
                },
                "librarySectionTitle": {
                    "type": "string"
                },
                "originallyAvailableAt": {
                    "type": "string"
                },
                "parentGuid": {
                    "type": "string"
                },
                "parentIndex": {
                    "type": "integer"
                },
                "parentKey": {
                    "type": "string"
                },
                "parentRatingKey": {
                    "type": "string"
                },
                "parentThumb": {
                    "type": "string"
                },
                "parentTitle": {
                    "type": "string"
                },
                "primaryExtraKey": {
                    "type": "string"
                },
                "rating": {
                    "type": "number"
                },
                "ratingImage": {
                    "type": "string"
                },
                "ratingKey": {
                    "type": "string"
                },
                "sessionKey": {
                    "type": "string"
                },
                "studio": {
                    "type": "string"
                },
                "summary": {
                    "type": "string"
                },
                "thumb": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "titleSort": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "integer"
                },
                "viewCount": {
                    "type": "integer"
                },
                "viewOffset": {
                    "type": "number"
                },
                "year": {
                    "type": "integer"
                }
            }
        },
        "plex.Sessions": {
            "type": "object",
            "properties": {
                "hostId": {
                    "type": "string"
                },
                "server": {
                    "type": "string"
                },
                "sessions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/plex.Session"
                    }
                }
            }
        },
        "plex.Transcode": {
            "type": "object",
            "properties": {
                "audioChannels": {
                    "type": "integer"
                },
                "audioCodec": {
                    "type": "string"
                },
                "audioDecision": {
                    "type": "string"
                },
                "complete": {
                    "type": "boolean"
                },
                "container": {
                    "type": "string"
                },
                "context": {
                    "type": "string"
                },
                "duration": {
                    "type": "integer"
                },
                "key": {
                    "type": "string"
                },
                "maxOffsetAvailable": {
                    "type": "number"
                },
                "minOffsetAvailable": {
                    "type": "number"
                },
                "progress": {
                    "type": "number"
                },
                "protocol": {
                    "type": "string"
                },
                "remaining": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                },
                "sourceAudioCodec": {
                    "type": "string"
                },
                "sourceVideoCodec": {
                    "type": "string"
                },
                "speed": {
                    "type": "number"
                },
                "throttled": {
                    "type": "boolean"
                },
                "timeStamp": {
                    "type": "number"
                },
                "transcodeHwFullPipeline": {
                    "type": "boolean"
                },
                "transcodeHwRequested": {
                    "type": "boolean"
                },
                "videoCodec": {
                    "type": "string"
                },
                "videoDecision": {
                    "type": "string"
                }
            }
        },
        "plex.User": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "thumb": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "plex.WebsiteConfig": {
            "type": "object",
            "properties": {
                "accountMap": {
                    "type": "string"
                },
                "activityDelay": {
                    "$ref": "#/definitions/cnfg.Duration"
                },
                "cooldown": {
                    "$ref": "#/definitions/cnfg.Duration"
                },
                "interval": {
                    "$ref": "#/definitions/cnfg.Duration"
                },
                "moviesPc": {
                    "type": "integer"
                },
                "noActivity": {
                    "type": "boolean"
                },
                "seriesPc": {
                    "type": "integer"
                },
                "trackSessions": {
                    "type": "boolean"
                }
            }
        },
        "plex.structDur": {
            "type": "object",
            "properties": {
                "time.Time": {
                    "type": "string"
                }
            }
        },
        "prowlarr.SystemStatus": {
            "type": "object",
            "properties": {
                "appData": {
                    "type": "string"
                },
                "appName": {
                    "type": "string"
                },
                "authentication": {
                    "type": "string"
                },
                "branch": {
                    "type": "string"
                },
                "buildTime": {
                    "type": "string"
                },
                "databaseType": {
                    "type": "string"
                },
                "databaseVersion": {
                    "type": "string"
                },
                "instanceName": {
                    "type": "string"
                },
                "isAdmin": {
                    "type": "boolean"
                },
                "isDebug": {
                    "type": "boolean"
                },
                "isDocker": {
                    "type": "boolean"
                },
                "isLinux": {
                    "type": "boolean"
                },
                "isMono": {
                    "type": "boolean"
                },
                "isNetCore": {
                    "type": "boolean"
                },
                "isOsx": {
                    "type": "boolean"
                },
                "isProduction": {
                    "type": "boolean"
                },
                "isUserInteractive": {
                    "type": "boolean"
                },
                "isWindows": {
                    "type": "boolean"
                },
                "migrationVersion": {
                    "type": "integer"
                },
                "mode": {
                    "type": "string"
                },
                "osName": {
                    "type": "string"
                },
                "osVersion": {
                    "type": "string"
                },
                "packageAuthor": {
                    "type": "string"
                },
                "packageUpdateMechanism": {
                    "type": "string"
                },
                "packageVersion": {
                    "type": "string"
                },
                "runtimeName": {
                    "type": "string"
                },
                "runtimeVersion": {
                    "type": "string"
                },
                "startTime": {
                    "type": "string"
                },
                "startupPath": {
                    "type": "string"
                },
                "urlBase": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "radarr.CustomFormatOutput": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "includeCustomFormatWhenRenaming": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "specifications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/radarr.CustomFormatOutputSpec"
                    }
                }
            }
        },
        "radarr.CustomFormatOutputSpec": {
            "type": "object",
            "properties": {
                "fields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/starr.FieldOutput"
                    }
                },
                "implementation": {
                    "type": "string"
                },
                "implementationName": {
                    "type": "string"
                },
                "infoLink": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "negate": {
                    "type": "boolean"
                },
                "required": {
                    "type": "boolean"
                }
            }
        },
        "radarr.Queue": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                },
                "records": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/radarr.QueueRecord"
                    }
                },
                "sortDirection": {
                    "type": "string"
                },
                "sortKey": {
                    "type": "string"
                },
                "totalRecords": {
                    "type": "integer"
                }
            }
        },
        "radarr.QueueRecord": {
            "type": "object",
            "properties": {
                "customFormats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/radarr.CustomFormatOutput"
                    }
                },
                "downloadClient": {
                    "type": "string"
                },
                "downloadClientHasPostImportCategory": {
                    "type": "boolean"
                },
                "downloadId": {
                    "type": "string"
                },
                "errorMessage": {
                    "type": "string"
                },
                "estimatedCompletionTime": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "indexer": {
                    "type": "string"
                },
                "languages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/starr.Value"
                    }
                },
                "movieId": {
                    "type": "integer"
                },
                "outputPath": {
                    "type": "string"
                },
                "protocol": {
                    "$ref": "#/definitions/starr.Protocol"
                },
                "quality": {
                    "$ref": "#/definitions/starr.Quality"
                },
                "size": {
                    "type": "number"
                },
                "sizeleft": {
                    "type": "number"
                },
                "status": {
                    "type": "string"
                },
                "statusMessages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/starr.StatusMessage"
                    }
                },
                "timeleft": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "trackedDownloadState": {
                    "type": "string"
                },
                "trackedDownloadStatus": {
                    "type": "string"
                }
            }
        },
        "radarr.SystemStatus": {
            "type": "object",
            "properties": {
                "appData": {
                    "type": "string"
                },
                "appName": {
                    "type": "string"
                },
                "authentication": {
                    "type": "string"
                },
                "branch": {
                    "type": "string"
                },
                "buildTime": {
                    "type": "string"
                },
                "databaseType": {
                    "type": "string"
                },
                "databaseVersion": {
                    "type": "string"
                },
                "instanceName": {
                    "type": "string"
                },
                "isAdmin": {
                    "type": "boolean"
                },
                "isDebug": {
                    "type": "boolean"
                },
                "isDocker": {
                    "type": "boolean"
                },
                "isLinux": {
                    "type": "boolean"
                },
                "isNetCore": {
                    "type": "boolean"
                },
                "isOsx": {
                    "type": "boolean"
                },
                "isProduction": {
                    "type": "boolean"
                },
                "isUserInteractive": {
                    "type": "boolean"
                },
                "isWindows": {
                    "type": "boolean"
                },
                "migrationVersion": {
                    "type": "integer"
                },
                "mode": {
                    "type": "string"
                },
                "osName": {
                    "type": "string"
                },
                "packageAuthor": {
                    "type": "string"
                },
                "packageUpdateMechanism": {
                    "type": "string"
                },
                "packageVersion": {
                    "type": "string"
                },
                "runtimeName": {
                    "type": "string"
                },
                "runtimeVersion": {
                    "type": "string"
                },
                "startTime": {
                    "type": "string"
                },
                "startupPath": {
                    "type": "string"
                },
                "urlBase": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "readarr.Queue": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                },
                "records": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/readarr.QueueRecord"
                    }
                },
                "sortDirection": {
                    "type": "string"
                },
                "sortKey": {
                    "type": "string"
                },
                "totalRecords": {
                    "type": "integer"
                }
            }
        },
        "readarr.QueueRecord": {
            "type": "object",
            "properties": {
                "authorId": {
                    "type": "integer"
                },
                "bookId": {
                    "type": "integer"
                },
                "downloadClient": {
                    "type": "string"
                },
                "downloadClientHasPostImportCategory": {
                    "type": "boolean"
                },
                "downloadForced": {
                    "type": "boolean"
                },
                "downloadId": {
                    "type": "string"
                },
                "errorMessage": {
                    "type": "string"
                },
                "estimatedCompletionTime": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "indexer": {
                    "type": "string"
                },
                "outputPath": {
                    "type": "string"
                },
                "protocol": {
                    "$ref": "#/definitions/starr.Protocol"
                },
                "quality": {
                    "$ref": "#/definitions/starr.Quality"
                },
                "size": {
                    "type": "number"
                },
                "sizeleft": {
                    "type": "number"
                },
                "status": {
                    "type": "string"
                },
                "statusMessages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/starr.StatusMessage"
                    }
                },
                "timeleft": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "trackedDownloadState": {
                    "type": "string"
                },
                "trackedDownloadStatus": {
                    "type": "string"
                }
            }
        },
        "readarr.SystemStatus": {
            "type": "object",
            "properties": {
                "appData": {
                    "type": "string"
                },
                "appName": {
                    "type": "string"
                },
                "authentication": {
                    "type": "string"
                },
                "branch": {
                    "type": "string"
                },
                "buildTime": {
                    "type": "string"
                },
                "databaseType": {
                    "type": "string"
                },
                "databaseVersion": {
                    "type": "string"
                },
                "instanceName": {
                    "type": "string"
                },
                "isAdmin": {
                    "type": "boolean"
                },
                "isDebug": {
                    "type": "boolean"
                },
                "isDocker": {
                    "type": "boolean"
                },
                "isLinux": {
                    "type": "boolean"
                },
                "isMono": {
                    "type": "boolean"
                },
                "isNetCore": {
                    "type": "boolean"
                },
                "isOsx": {
                    "type": "boolean"
                },
                "isProduction": {
                    "type": "boolean"
                },
                "isUserInteractive": {
                    "type": "boolean"
                },
                "isWindows": {
                    "type": "boolean"
                },
                "migrationVersion": {
                    "type": "integer"
                },
                "mode": {
                    "type": "string"
                },
                "osName": {
                    "type": "string"
                },
                "osVersion": {
                    "type": "string"
                },
                "packageAuthor": {
                    "type": "string"
                },
                "packageUpdateMechanism": {
                    "type": "string"
                },
                "packageVersion": {
                    "type": "string"
                },
                "runtimeName": {
                    "type": "string"
                },
                "runtimeVersion": {
                    "type": "string"
                },
                "startTime": {
                    "type": "string"
                },
                "startupPath": {
                    "type": "string"
                },
                "urlBase": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "scheduler.CronJob": {
            "type": "object",
            "properties": {
                "atTimes": {
                    "description": "AtTimes is a list of 'hours, minutes, seconds' to schedule for Daily/Weekly/Monthly frequencies.\nAlso used in Minutely and Hourly schedules, a bit awkwardly.",
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "daysOfMonth": {
                    "description": "DaysOfMonth is a list of days to schedule. 1 to 31 or -31 to -1 to count backward.",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "daysOfWeek": {
                    "description": "DaysOfWeek is a list of days to schedule. 0-6. 0 = Sunday.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/scheduler.Weekday"
                    }
                },
                "frequency": {
                    "description": "Frequency to configure the job. Pass 0 disable the cron.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/scheduler.Frequency"
                        }
                    ]
                },
                "interval": {
                    "description": "Interval for Daily, Weekly and Monthly Frequencies. 1 = every day/week/month, 2 = every other, and so on.",
                    "type": "integer"
                },
                "months": {
                    "description": "Months to schedule. 1 to 12. 1 = January.",
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "scheduler.Frequency": {
            "type": "integer",
            "enum": [
                0,
                1,
                2,
                3,
                4,
                5
            ],
            "x-enum-varnames": [
                "DeadCron",
                "Minutely",
                "Hourly",
                "Daily",
                "Weekly",
                "Monthly"
            ]
        },
        "scheduler.Weekday": {
            "type": "integer",
            "enum": [
                0,
                1,
                2,
                3,
                4,
                5,
                6
            ],
            "x-enum-varnames": [
                "Sunday",
                "Monday",
                "Tuesday",
                "Wednesday",
                "Thursday",
                "Friday",
                "Saturday"
            ]
        },
        "services.CheckResult": {
            "type": "object",
            "properties": {
                "interval": {
                    "description": "interval in seconds",
                    "type": "number"
                },
                "metadata": {
                    "description": "arbitrary info about the service or result.",
                    "type": "object",
                    "additionalProperties": {}
                },
                "name": {
                    "description": "\"Radarr\"",
                    "type": "string"
                },
                "output": {
                    "description": "metadata message must never be nil.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/services.Output"
                        }
                    ]
                },
                "since": {
                    "description": "how long it has been in this state, rounded to Microseconds",
                    "type": "string"
                },
                "state": {
                    "description": "0 = OK, 1 = Warn, 2 = Crit, 3 = Unknown",
                    "allOf": [
                        {
                            "$ref": "#/definitions/services.CheckState"
                        }
                    ]
                },
                "time": {
                    "description": "when it was checked, rounded to Microseconds",
                    "type": "string"
                },
                "type": {
                    "description": "http, tcp, ping",
                    "allOf": [
                        {
                            "$ref": "#/definitions/services.CheckType"
                        }
                    ]
                }
            }
        },
        "services.CheckState": {
            "type": "integer",
            "enum": [
                0,
                1,
                2,
                3
            ],
            "x-enum-varnames": [
                "StateOK",
                "StateWarning",
                "StateCritical",
                "StateUnknown"
            ]
        },
        "services.CheckType": {
            "type": "string",
            "enum": [
                "http",
                "tcp",
                "ping",
                "icmp",
                "process"
            ],
            "x-enum-varnames": [
                "CheckHTTP",
                "CheckTCP",
                "CheckPING",
                "CheckICMP",
                "CheckPROC"
            ]
        },
        "services.Config": {
            "type": "object",
            "properties": {
                "disabled": {
                    "type": "boolean"
                },
                "interval": {
                    "$ref": "#/definitions/cnfg.Duration"
                },
                "logFile": {
                    "type": "string"
                },
                "parallel": {
                    "type": "integer"
                }
            }
        },
        "services.Output": {
            "type": "object"
        },
        "services.ServiceConfig": {
            "type": "object",
            "properties": {
                "expect": {
                    "description": "200",
                    "type": "string"
                },
                "interval": {
                    "description": "1m",
                    "allOf": [
                        {
                            "$ref": "#/definitions/cnfg.Duration"
                        }
                    ]
                },
                "name": {
                    "description": "Radarr",
                    "type": "string"
                },
                "tags": {
                    "description": "copied to Metadata.",
                    "type": "object",
                    "additionalProperties": {}
                },
                "timeout": {
                    "description": "10s",
                    "allOf": [
                        {
                            "$ref": "#/definitions/cnfg.Duration"
                        }
                    ]
                },
                "type": {
                    "description": "http",
                    "allOf": [
                        {
                            "$ref": "#/definitions/services.CheckType"
                        }
                    ]
                },
                "value": {
                    "description": "http://some.url",
                    "type": "string"
                }
            }
        },
        "snapshot.Config": {
            "type": "object",
            "properties": {
                "allDrives": {
                    "description": "usage for all drives?",
                    "type": "boolean"
                },
                "interval": {
                    "description": "how often to send snaps (cron).",
                    "allOf": [
                        {
                            "$ref": "#/definitions/cnfg.Duration"
                        }
                    ]
                },
                "ioTop": {
                    "description": "number of processes to include from ioTop",
                    "type": "integer"
                },
                "ipmi": {
                    "description": "get ipmi sensor info.",
                    "type": "boolean"
                },
                "ipmiSudo": {
                    "description": "use sudo to get ipmi sensor info.",
                    "type": "boolean"
                },
                "monitorDrives": {
                    "description": "smartctl commands.",
                    "type": "boolean"
                },
                "monitorRaid": {
                    "description": "include mdstat and/or megaraid.",
                    "type": "boolean"
                },
                "monitorSpace": {
                    "description": "get disk usage.",
                    "type": "boolean"
                },
                "myTop": {
                    "description": "number of processes to include from mysql servers.",
                    "type": "integer"
                },
                "mysql": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/snapshot.MySQLConfig"
                    }
                },
                "nvidia": {
                    "$ref": "#/definitions/snapshot.NvidiaConfig"
                },
                "psTop": {
                    "description": "number of processes to include from top (cpu usage)",
                    "type": "integer"
                },
                "quotas": {
                    "description": "usage for user quotas?",
                    "type": "boolean"
                },
                "timeout": {
                    "description": "total run time allowed.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/cnfg.Duration"
                        }
                    ]
                },
                "useSudo": {
                    "description": "use sudo for smartctl commands.",
                    "type": "boolean"
                },
                "zfsPools": {
                    "description": "zfs pools to monitor.",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "snapshot.IOTopData": {
            "type": "object",
            "properties": {
                "currentRead": {
                    "type": "number"
                },
                "currentWrite": {
                    "type": "number"
                },
                "procs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/snapshot.IOTopProc"
                    }
                },
                "totalRead": {
                    "type": "number"
                },
                "totalWrite": {
                    "type": "number"
                }
            }
        },
        "snapshot.IOTopProc": {
            "type": "object",
            "properties": {
                "command": {
                    "type": "string"
                },
                "diskRead": {
                    "type": "number"
                },
                "diskWrite": {
                    "type": "number"
                },
                "io": {
                    "type": "number"
                },
                "pid": {
                    "type": "integer"
                },
                "prio": {
                    "type": "string"
                },
                "swapIn": {
                    "type": "number"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "snapshot.IPMISensor": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "unit": {
                    "type": "string"
                },
                "value": {
                    "type": "number"
                }
            }
        },
        "snapshot.IoStatDisk": {
            "type": "object",
            "properties": {
                "aqu-sz": {
                    "type": "number"
                },
                "d/s": {
                    "type": "number"
                },
                "d_await": {
                    "type": "number"
                },
                "dareq-sz": {
                    "type": "number"
                },
                "disk_device": {
                    "type": "string"
                },
                "dkB/s": {
                    "type": "number"
                },
                "drqm": {
                    "type": "number"
                },
                "drqm/s": {
                    "type": "number"
                },
                "r/s": {
                    "type": "number"
                },
                "r_await": {
                    "type": "number"
                },
                "rareq-sz": {
                    "type": "number"
                },
                "rkB/s": {
                    "type": "number"
                },
                "rrqm": {
                    "type": "number"
                },
                "rrqm/s": {
                    "type": "number"
                },
                "util": {
                    "type": "number"
                },
                "w/s": {
                    "type": "number"
                },
                "w_await": {
                    "type": "number"
                },
                "wareq-sz": {
                    "type": "number"
                },
                "wkB/s": {
                    "type": "number"
                },
                "wrqm": {
                    "type": "number"
                },
                "wrqm/s": {
                    "type": "number"
                }
            }
        },
        "snapshot.MegaCLI": {
            "type": "object",
            "properties": {
                "adapter": {
                    "type": "string"
                },
                "data": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "drive": {
                    "type": "string"
                },
                "target": {
                    "type": "string"
                }
            }
        },
        "snapshot.MySQLConfig": {
            "type": "object",
            "properties": {
                "host": {
                    "type": "string"
                },
                "interval": {
                    "description": "Only used by service checks, snapshot interval is used for mysql.",
                    "allOf": [
                        {
                            "$ref": "#/definitions/cnfg.Duration"
                        }
                    ]
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "timeout": {
                    "$ref": "#/definitions/cnfg.Duration"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "snapshot.MySQLProcess": {
            "type": "object",
            "properties": {
                "command": {
                    "type": "string"
                },
                "db": {
                    "$ref": "#/definitions/snapshot.NullString"
                },
                "host": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "info": {
                    "$ref": "#/definitions/snapshot.NullString"
                },
                "progress": {
                    "description": "mariadb",
                    "type": "number"
                },
                "state": {
                    "type": "string"
                },
                "time": {
                    "type": "integer"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "snapshot.MySQLServerData": {
            "type": "object",
            "properties": {
                "globalstatus": {
                    "$ref": "#/definitions/snapshot.MySQLStatus"
                },
                "name": {
                    "type": "string"
                },
                "processes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/snapshot.MySQLProcess"
                    }
                }
            }
        },
        "snapshot.MySQLStatus": {
            "type": "object",
            "additionalProperties": true
        },
        "snapshot.NullString": {
            "type": "object",
            "properties": {
                "string": {
                    "type": "string"
                },
                "valid": {
                    "description": "Valid is true if String is not NULL",
                    "type": "boolean"
                }
            }
        },
        "snapshot.NvidiaConfig": {
            "type": "object",
            "properties": {
                "busIDs": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "disabled": {
                    "type": "boolean"
                },
                "smiPath": {
                    "type": "string"
                }
            }
        },
        "snapshot.NvidiaOutput": {
            "type": "object",
            "properties": {
                "busId": {
                    "type": "string"
                },
                "driverVersion": {
                    "type": "string"
                },
                "memFree": {
                    "type": "integer"
                },
                "memTotal": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "pState": {
                    "type": "string"
                },
                "temperature": {
                    "type": "integer"
                },
                "utiliization": {
                    "type": "integer"
                },
                "vBios": {
                    "type": "string"
                }
            }
        },
        "snapshot.Partition": {
            "type": "object",
            "properties": {
                "free": {
                    "type": "integer"
                },
                "fsType": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "opts": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "readOnly": {
                    "type": "boolean"
                },
                "total": {
                    "type": "integer"
                },
                "used": {
                    "type": "integer"
                }
            }
        },
        "snapshot.Process": {
            "type": "object",
            "properties": {
                "cpuPercent": {
                    "type": "number"
                },
                "memPercent": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "pid": {
                    "type": "integer"
                }
            }
        },
        "snapshot.RaidData": {
            "type": "object",
            "properties": {
                "mdstat": {
                    "type": "string"
                },
                "megacli": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/snapshot.MegaCLI"
                    }
                }
            }
        },
        "snapshot.Snapshot": {
            "type": "object",
            "properties": {
                "diskUsage": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/snapshot.Partition"
                    }
                },
                "driveAges": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                },
                "driveHealth": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "driveTemps": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "integer"
                    }
                },
                "ioStat": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/snapshot.IoStatDisk"
                    }
                },
                "ioStat2": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/disk.IOCountersStat"
                    }
                },
                "ioTop": {
                    "$ref": "#/definitions/snapshot.IOTopData"
                },
                "ipmiSensors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/snapshot.IPMISensor"
                    }
                },
                "mysql": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/snapshot.MySQLServerData"
                    }
                },
                "nvidia": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/snapshot.NvidiaOutput"
                    }
                },
                "processes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/snapshot.Process"
                    }
                },
                "quotas": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/snapshot.Partition"
                    }
                },
                "raid": {
                    "$ref": "#/definitions/snapshot.RaidData"
                },
                "synology": {
                    "$ref": "#/definitions/snapshot.Synology"
                },
                "system": {
                    "type": "object",
                    "properties": {
                        "bootTime": {
                            "type": "integer"
                        },
                        "cpuPerc": {
                            "type": "number"
                        },
                        "cpuTime": {
                            "$ref": "#/definitions/cpu.TimesStat"
                        },
                        "hostId": {
                            "description": "ex: uuid",
                            "type": "string"
                        },
                        "hostname": {
                            "type": "string"
                        },
                        "kernelArch": {
                            "description": "native cpu architecture queried at runtime, as returned by `uname -m` or empty string in case of error",
                            "type": "string"
                        },
                        "kernelVersion": {
                            "description": "version of the OS kernel (if available)",
                            "type": "string"
                        },
                        "load1": {
                            "type": "number"
                        },
                        "load15": {
                            "type": "number"
                        },
                        "load5": {
                            "type": "number"
                        },
                        "memFree": {
                            "type": "integer"
                        },
                        "memTotal": {
                            "type": "integer"
                        },
                        "memUsed": {
                            "type": "integer"
                        },
                        "os": {
                            "description": "ex: freebsd, linux",
                            "type": "string"
                        },
                        "platform": {
                            "description": "ex: ubuntu, linuxmint",
                            "type": "string"
                        },
                        "platformFamily": {
                            "description": "ex: debian, rhel",
                            "type": "string"
                        },
                        "platformVersion": {
                            "description": "version of the complete OS",
                            "type": "string"
                        },
                        "procs": {
                            "description": "number of processes",
                            "type": "integer"
                        },
                        "temperatures": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "number",
                                "format": "float64"
                            }
                        },
                        "uptime": {
                            "type": "integer"
                        },
                        "username": {
                            "type": "string"
                        },
                        "users": {
                            "type": "integer"
                        },
                        "virtualizationRole": {
                            "description": "guest or host",
                            "type": "string"
                        },
                        "virtualizationSystem": {
                            "type": "string"
                        }
                    }
                },
                "version": {
                    "type": "string"
                },
                "zfsPools": {
                    "type": "object",
                    "additionalProperties": {
                        "$ref": "#/definitions/snapshot.Partition"
                    }
                }
            }
        },
        "snapshot.Synology": {
            "type": "object",
            "properties": {
                "ha": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "last_admin_login_build": {
                    "description": "254263",
                    "type": "string"
                },
                "manager": {
                    "description": "Synology DiskStation",
                    "type": "string"
                },
                "udc_check_state": {
                    "description": "6.2.3",
                    "type": "string"
                },
                "upnpmodelname": {
                    "description": "DS1517+",
                    "type": "string"
                },
                "vender": {
                    "description": "Synology Inc.",
                    "type": "string"
                }
            }
        },
        "sonarr.Queue": {
            "type": "object",
            "properties": {
                "page": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                },
                "records": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/sonarr.QueueRecord"
                    }
                },
                "sortDirection": {
                    "type": "string"
                },
                "sortKey": {
                    "type": "string"
                },
                "totalRecords": {
                    "type": "integer"
                }
            }
        },
        "sonarr.QueueRecord": {
            "type": "object",
            "properties": {
                "downloadClient": {
                    "type": "string"
                },
                "downloadClientHasPostImportCategory": {
                    "type": "boolean"
                },
                "downloadId": {
                    "type": "string"
                },
                "episodeId": {
                    "type": "integer"
                },
                "errorMessage": {
                    "type": "string"
                },
                "estimatedCompletionTime": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "indexer": {
                    "type": "string"
                },
                "language": {
                    "$ref": "#/definitions/starr.Value"
                },
                "outputPath": {
                    "type": "string"
                },
                "protocol": {
                    "$ref": "#/definitions/starr.Protocol"
                },
                "quality": {
                    "$ref": "#/definitions/starr.Quality"
                },
                "seriesId": {
                    "type": "integer"
                },
                "size": {
                    "type": "number"
                },
                "sizeleft": {
                    "type": "number"
                },
                "status": {
                    "type": "string"
                },
                "statusMessages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/starr.StatusMessage"
                    }
                },
                "timeleft": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "trackedDownloadState": {
                    "type": "string"
                },
                "trackedDownloadStatus": {
                    "type": "string"
                }
            }
        },
        "sonarr.SystemStatus": {
            "type": "object",
            "properties": {
                "appData": {
                    "type": "string"
                },
                "appName": {
                    "type": "string"
                },
                "authentication": {
                    "type": "string"
                },
                "branch": {
                    "type": "string"
                },
                "buildTime": {
                    "type": "string"
                },
                "instanceName": {
                    "type": "string"
                },
                "isAdmin": {
                    "type": "boolean"
                },
                "isDebug": {
                    "type": "boolean"
                },
                "isLinux": {
                    "type": "boolean"
                },
                "isMono": {
                    "type": "boolean"
                },
                "isMonoRuntime": {
                    "type": "boolean"
                },
                "isOsx": {
                    "type": "boolean"
                },
                "isProduction": {
                    "type": "boolean"
                },
                "isUserInteractive": {
                    "type": "boolean"
                },
                "isWindows": {
                    "type": "boolean"
                },
                "mode": {
                    "type": "string"
                },
                "osName": {
                    "type": "string"
                },
                "osVersion": {
                    "type": "string"
                },
                "packageAuthor": {
                    "type": "string"
                },
                "packageUpdateMechanism": {
                    "type": "string"
                },
                "packageVersion": {
                    "type": "string"
                },
                "runtimeName": {
                    "type": "string"
                },
                "runtimeVersion": {
                    "type": "string"
                },
                "sqliteVersion": {
                    "type": "string"
                },
                "startTime": {
                    "type": "string"
                },
                "startupPath": {
                    "type": "string"
                },
                "urlBase": {
                    "type": "string"
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "starr.BaseQuality": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "modifier": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "resolution": {
                    "type": "integer"
                },
                "source": {
                    "type": "string"
                }
            }
        },
        "starr.FieldOutput": {
            "type": "object",
            "properties": {
                "advanced": {
                    "type": "boolean"
                },
                "helpLink": {
                    "type": "string"
                },
                "helpText": {
                    "type": "string"
                },
                "hidden": {
                    "type": "string"
                },
                "label": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "order": {
                    "type": "integer"
                },
                "privacy": {
                    "type": "string"
                },
                "selectOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/starr.SelectOption"
                    }
                },
                "selectOptionsProviderAction": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "value": {}
            }
        },
        "starr.Protocol": {
            "type": "string",
            "enum": [
                "unknown",
                "usenet",
                "torrent"
            ],
            "x-enum-varnames": [
                "ProtocolUnknown",
                "ProtocolUsenet",
                "ProtocolTorrent"
            ]
        },
        "starr.Quality": {
            "type": "object",
            "properties": {
                "allowed": {
                    "type": "boolean"
                },
                "id": {
                    "type": "integer"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/starr.Quality"
                    }
                },
                "name": {
                    "type": "string"
                },
                "quality": {
                    "$ref": "#/definitions/starr.BaseQuality"
                },
                "revision": {
                    "description": "Not sure which app had this....",
                    "allOf": [
                        {
                            "$ref": "#/definitions/starr.QualityRevision"
                        }
                    ]
                }
            }
        },
        "starr.QualityRevision": {
            "type": "object",
            "properties": {
                "isRepack": {
                    "type": "boolean"
                },
                "real": {
                    "type": "integer"
                },
                "version": {
                    "type": "integer"
                }
            }
        },
        "starr.SelectOption": {
            "type": "object",
            "properties": {
                "dividerAfter": {
                    "type": "boolean"
                },
                "hint": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "order": {
                    "type": "integer"
                },
                "value": {
                    "type": "integer"
                }
            }
        },
        "starr.StatusMessage": {
            "type": "object",
            "properties": {
                "messages": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "starr.Value": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "tautulli.Info": {
            "type": "object",
            "properties": {
                "tautulli_branch": {
                    "type": "string"
                },
                "tautulli_commit": {
                    "type": "string"
                },
                "tautulli_install_type": {
                    "type": "string"
                },
                "tautulli_platform": {
                    "type": "string"
                },
                "tautulli_platform_device_name": {
                    "type": "string"
                },
                "tautulli_platform_linux_distro": {
                    "type": "string"
                },
                "tautulli_platform_release": {
                    "type": "string"
                },
                "tautulli_platform_version": {
                    "type": "string"
                },
                "tautulli_python_version": {
                    "type": "string"
                },
                "tautulli_version": {
                    "type": "string"
                }
            }
        },
        "tautulli.User": {
            "type": "object",
            "properties": {
                "allow_guest": {
                    "description": "1,0 (bool)",
                    "type": "integer"
                },
                "do_notify": {
                    "description": "1,0 (bool)",
                    "type": "integer"
                },
                "email": {
                    "type": "string"
                },
                "filter_all": {
                    "type": "string"
                },
                "filter_movies": {
                    "type": "string"
                },
                "filter_music": {
                    "type": "string"
                },
                "filter_photos": {
                    "type": "string"
                },
                "filter_tv": {
                    "type": "string"
                },
                "friendly_name": {
                    "type": "string"
                },
                "is_active": {
                    "description": "1,0 (bool)",
                    "type": "integer"
                },
                "is_admin": {
                    "description": "1,0 (bool)",
                    "type": "integer"
                },
                "is_allow_sync": {
                    "description": "1,0 (bool)",
                    "type": "integer"
                },
                "is_home_user": {
                    "description": "1,0 (bool)",
                    "type": "integer"
                },
                "is_restricted": {
                    "description": "1,0 (bool)",
                    "type": "integer"
                },
                "keep_history": {
                    "description": "1,0 (bool)",
                    "type": "integer"
                },
                "row_id": {
                    "type": "integer"
                },
                "server_token": {
                    "type": "string"
                },
                "shared_libraries": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "thumb": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "tautulli.Users": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "object",
                    "properties": {
                        "data": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/tautulli.User"
                            }
                        },
                        "message": {
                            "description": "error msg",
                            "type": "string"
                        },
                        "result": {
                            "description": "success, error",
                            "type": "string"
                        }
                    }
                }
            }
        },
        "url.Values": {
            "type": "object",
            "additionalProperties": {
                "type": "array",
                "items": {
                    "type": "string"
                }
            }
        }
    }
}